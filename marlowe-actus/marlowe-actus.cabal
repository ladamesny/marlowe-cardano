cabal-version: 2.2
name: marlowe-actus
version: 0.1.0.0
license: Apache-2.0
license-files:
  LICENSE
  NOTICE
build-type: Simple
maintainer: Yves Hauser <yves.hauser@iohk.io>
stability: experimental
author: Dmytro Kondratiuk, Yves Hauser
synopsis:
  Marlowe ACTUS: Standardised financial contracts with Marlowe
description:
  /marlowe-actus/ is an implementation of the [ACTUS](https://www.actusfrf.org)
  specification in Haskell together with generators for Marlowe contracts.
  .
  ACTUS is a [taxonomy](https://www.actusfrf.org/taxonomy) of financial contracts that
  uniformly specifies projected cash flows per contract type. A contract is evolved
  over time, i.e. state changes are triggered from event schedules and performed by
  state transformation functions, projected cash flows are determined by payoff
  functions. Future contract state and payoff might depend on observable values, like
  user provided input (a choice for example) or market values
  observed by an Oracle.
  .
  The implementation is tested against the [reference test cases](https://github.com/actusfrf/actus-tests) provided by the
  ACTUS foundation.

category: Language
extra-doc-files: README.md

source-repository head
  type: git
  location: https://github.com/input-output-hk/plutus

flag defer-plugin-errors
    description:
        Defer errors from the plugin, useful for things like Haddock that can't handle it.
    default: False
    manual: True

library
  hs-source-dirs: src
  build-depends:
    aeson -any,
    base -any,
    bytestring,
    containers -any,
    newtype-generics,
    template-haskell -any,
    plutus-tx -any,
    plutus-contract -any,
    plutus-ledger,
    text,
    vector,
    marlowe -any,
    mtl -any,
    time -any,
    sort -any,
    validation -any
  default-language: Haskell2010
  default-extensions: ExplicitForAll ScopedTypeVariables
                      DeriveGeneric StandaloneDeriving DeriveLift
                      DeriveFunctor DeriveFoldable
                      DeriveTraversable
  exposed-modules:
    Language.Marlowe.ACTUS.Domain.BusinessEvents
    Language.Marlowe.ACTUS.Domain.ContractTerms
    Language.Marlowe.ACTUS.Domain.ContractState
    Language.Marlowe.ACTUS.Domain.Ops
    Language.Marlowe.ACTUS.Domain.Schedule
    Language.Marlowe.ACTUS.Generator.Analysis
    Language.Marlowe.ACTUS.Generator.Generator
    Language.Marlowe.ACTUS.Generator.GeneratorFs
    Language.Marlowe.ACTUS.Generator.GeneratorStatic
    Language.Marlowe.ACTUS.Generator.MarloweCompat
    Language.Marlowe.ACTUS.Model.Applicability
    Language.Marlowe.ACTUS.Model.ContractSchedule
    Language.Marlowe.ACTUS.Model.StateInitialization
    Language.Marlowe.ACTUS.Model.StateTransition
    Language.Marlowe.ACTUS.Model.Payoff
    Language.Marlowe.ACTUS.Utility.ANN.Annuity
    Language.Marlowe.ACTUS.Utility.DateShift
    Language.Marlowe.ACTUS.Utility.ScheduleGenerator
    Language.Marlowe.ACTUS.Utility.YearFraction
  ghc-options:
    -Wall -Wnoncanonical-monad-instances -Wunused-packages
    -Wincomplete-uni-patterns -Wincomplete-record-updates
    -Wredundant-constraints -Widentities

test-suite marlowe-actus-test
    default-language: Haskell2010
    hs-source-dirs: test
    type: exitcode-stdio-1.0
    main-is: Spec.hs
    other-modules:
        Spec.Marlowe.ACTUS.Examples
        Spec.Marlowe.ACTUS.TestFramework
        Spec.Marlowe.ACTUS.QCGenerator
        Spec.Marlowe.ACTUS.QCTests
    build-depends:
        vector -any,
        unordered-containers -any,
        scientific -any,
        extra -any,
        utf8-string -any,
        aeson -any,
        base >=4.9 && <5,
        containers -any,
        hedgehog -any,
        lens -any,
        bytestring -any,
        tasty -any,
        tasty-hunit -any,
        tasty-quickcheck -any,
        text -any,
        cborg,
        plutus-ledger -any,
        plutus-contract -any,
        marlowe,
        marlowe-actus,
        plutus-tx -any,
        template-haskell -any,
        marlowe -any,
        time -any,
        validation -any,
        pretty-simple -any,
        mtl -any,
        sort -any,
        QuickCheck
  ghc-options:
    -Wall -Wnoncanonical-monad-instances
    -Wincomplete-uni-patterns -Wincomplete-record-updates
    -Wredundant-constraints -Widentities
